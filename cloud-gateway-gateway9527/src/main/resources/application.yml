server:
  port: 9527

spring:
  application:
    name: cloud-gateway
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true #开启从注册中心动态创建路由的功能，利用微服务名进行路由
      routes:
        - id: payment_routh #路由的ID，没有固定规则但要求唯一，建议配合服务名
        # uri: http://localhost:8001 #匹配后提供服务的路由地址
          uri: lb://cloud-payment-service #匹配后提供服务的路由地址,lb的意思表示使用Ribbon的负载均衡LoadBalanced
          #filters:  #过滤器配置
            #-AddRequestParameter=X-Request-Id,1024  #过滤器工厂会在匹配的请求头加上一对请求头，名称为X-Request-Id值为1024
          predicates: #Predicate就是为了实现一组匹配规则，让请求过来找到对应的Route进行处理
            - Path=/payment/get/**  #断言，路径相匹配后进行路由
            - After=2020-07-01T16:53:17.271+08:00[Asia/Shanghai] #表示要在2020-07-01T16:53:17.271这个时间之后请求/payment/get/**才有效
            - Cookie=username,guanlei #需要待着cookie访问，key=ername,value=guanlei
            - Header=X-Request-Id, \d+  #请求头要有X-Request-Id属性并且值为整数的正则表达式
            - Method=GET  #只接收GET请求

        - id: payment_routh2
        # uri: http://localhost:8001
          uri: lb://cloud-payment-service
          predicates:
            - Path=/payment/lb/**

eureka:
  instance:
    hostname: cloud-gateway-service
  client:
    register-with-eureka: true #表示是否将自己注册进EurekaServer,默认为true
    fetch-registry: true #是否从EurekaServer中抓取自己的注册信息，默认为true,单节点无所谓，集群必须设置为true才能配合ribbon使用负载均衡
    service-url:
      defaultZone: http://eureka7001.com:7001/eureka/,http://eureka7002.com:7002/eureka/ #服务中心的地址